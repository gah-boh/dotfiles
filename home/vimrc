set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle
" required! 
Plugin 'gmarik/Vundle.vim'
Plugin 'delimitMate.vim'
Plugin 'pangloss/vim-javascript'
Plugin 'scrooloose/nerdtree'
Plugin 'Shutnik/jshint2.vim'
Plugin 'mattn/emmet-vim'
Plugin 'plasticboy/vim-markdown'
Plugin 'altercation/vim-colors-solarized'
Plugin 'Keithbsmiley/swift.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'wesQ3/vim-windowswap'
Plugin 'Yggdroot/indentLine'
Plugin 'tpope/vim-surround'
Plugin 'itchyny/lightline.vim'
Plugin 'airblade/vim-gitgutter'
Plugin 'tpope/vim-commentary'
Plugin 'XadillaX/json-formatter.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'tpope/vim-unimpaired'
Plugin 'tpope/vim-repeat'
Plugin 'Valloric/YouCompleteMe'
Plugin 'SirVer/ultisnips'
Plugin 'vim-scripts/EasyGrep'
Plugin 'benmills/vimux'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

set guifont=Source\ Code\ Pro:h12
set noswapfile
set number
set nocompatible
set backspace=indent,eol,start
set history=500
set ruler
set autoindent
set noexpandtab
set smarttab
set showmatch
set splitright
set autoread
set nornu " no relative line numbers as default
set hidden
set listchars=tab:â–¸\ 

" Indentation
set tabstop=4
set softtabstop=4
set shiftwidth=4
autocmd FileType html setlocal expandtab " Use spaces for html files

" Wrapping
set nowrap
autocmd FileType markdown,mkd setlocal wrap

autocmd FileType javascript setlocal suffixesadd+=.js

set noerrorbells 
set novisualbell
set t_vb=
autocmd! GUIEnter * set vb t_vb=

" Solarized Plugin
syntax enable
set background=dark
colorscheme solarized

" gvim
set guioptions-=r
set guioptions-=T
set go-=L

set tags=tags;/ " Recursively search for a tag file in parent folders until it finds one.

" Vim Markdown
let g:vim_markdown_folding_disabled=1

" NERDTree
let g:NERDTreeWinSize=40

" GitGutter
let g:gitgutter_enabled = 0

" Lightline setup
set laststatus=2 " This will make sure it's always visible, not just on vsplits
let g:lightline = {
      \ 'colorscheme': 'solarized_dark'
      \ }

" JSHint2 settings
let jshint2_read = 1 " Lint files when opened
let jshint2_save = 1 " Lint files after saving

" quickly move between previous buffer
nnoremap <leader>s <c-^>

" Relative line numbers toggling
function! g:ToggleNuMode() 
	if(&rnu == 1) 
		set nornu 
	else 
		set rnu 
	endif 
endfunc 

nnoremap <leader>l :call g:ToggleNuMode()<cr> 

" Recreate tags
map <Leader>c :!rm tags; ctags --extra=+f --exclude=.git --exclude=bower_components --exclude=log --exclude=node_modules --exclude=public -R *<CR><CR>

" Quick buffer access
nnoremap <F5> :buffers<CR>:buffer<Space>

" Window Navigation Shortcuts
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" NERDTree Toggle Shortcut
nnoremap <C-g> :NERDTreeToggle<CR>

" GitGutter Toggling
nnoremap <leader>g :GitGutterToggle<cr> 

" UltiSnips
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsEditSplit="vertical"

" EasyGrep
let EasyGrepCommand=1
let g:EasyGrepFilesToExclude = "*.svn/*,*.git/*,*bower_components/*,*node_modules/*"

