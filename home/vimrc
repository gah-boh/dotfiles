set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle
" required! 
Plugin 'gmarik/Vundle.vim'
" Plugin 'pangloss/vim-javascript'
Plugin 'leafgarland/typescript-vim'
Plugin 'scrooloose/nerdtree'
Plugin 'kien/ctrlp.vim'
Plugin 'wesQ3/vim-windowswap'
Plugin 'Yggdroot/indentLine'
Plugin 'tpope/vim-surround'
Plugin 'itchyny/lightline.vim'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-unimpaired'
Plugin 'tpope/vim-repeat'
Plugin 'SirVer/ultisnips'
Plugin 'scrooloose/syntastic'
Plugin 'chriskempson/base16-vim'
Plugin 'altercation/vim-colors-solarized'
Plugin 'mxw/vim-jsx'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

set guifont=Source\ Code\ Pro:h12
set noswapfile
set number
set nocompatible
set backspace=indent,eol,start
set history=500
set ruler
set autoindent
set noexpandtab
set smarttab
set showmatch
set splitright
set autoread
set nornu " no relative line numbers as default
set hidden
set cursorline
set listchars=tab:â–¸\ 

" remap leader
let mapleader = "\<Space>"

" General Shortcuts
nnoremap <Leader>s :w<CR>
nnoremap <Leader>q :q<CR>

vmap <Leader>y "+y
vmap <Leader>d "+d
vmap <Leader>p "+p
vmap <Leader>P "+P
nmap <Leader><Leader> V

" quickly move between previous buffer
nnoremap <Leader>x <c-^>

" Indentation
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
autocmd FileType coffee,jade setlocal tabstop=2|setlocal softtabstop=2|setlocal shiftwidth=2
" autocmd FileType html setlocal expandtab " Use spaces for html files
function! g:ChangeTabWidth(width)
	let &l:tabstop=a:width
	let &l:softtabstop=a:width
	let &l:shiftwidth=a:width
endfunc
nnoremap <Leader>2 :call g:ChangeTabWidth(2)<cr>
nnoremap <Leader>4 :call g:ChangeTabWidth(4)<cr>

" Wrapping
set nowrap
autocmd FileType markdown,mkd setlocal wrap

autocmd FileType javascript setlocal suffixesadd+=.js

set noerrorbells 
set novisualbell
set t_vb=
autocmd! GUIEnter * set vb t_vb=

" Colorscheme
syntax enable
set background=dark
colorscheme base16-default

" gvim
set guioptions-=r
set guioptions-=T
set go-=L

set tags=tags;/ " Recursively search for a tag file in parent folders until it finds one.

" Vim Markdown
let g:vim_markdown_folding_disabled=1

" NERDTree
let g:NERDTreeWinSize=40

" Syntastic Checkers
let g:syntastic_javascript_checkers = ['eslint']

" Lightline setup
set laststatus=2 " This will make sure it's always visible, not just on vsplits
let g:lightline = {
      \ 'colorscheme': 'solarized_dark'
      \ }

" Relative line numbers toggling
function! g:ToggleNuMode() 
	if(&rnu == 1) 
		set nornu 
	else 
		set rnu 
	endif 
endfunc 

nnoremap <Leader>l :call g:ToggleNuMode()<cr> 

" Recreate tags
map <Leader>rt :!rm tags; ctags --extra=+f --exclude=.git --exclude=bower_components --exclude=log --exclude=node_modules --exclude=public -R *<CR><CR>

" Quick buffer access
nnoremap <F5> :buffers<CR>:buffer<Space>

" IndentLine
noremap <Leader>i :IndentLinesToggle<CR>
let g:indentLine_enabled = 0

" Show syntastic error window
nnoremap <Leader>c :Errors<CR>

" CtrlP BufferMode
nnoremap <Leader>o :CtrlP<CR>
nnoremap <Leader>bf :CtrlPBuffer<CR>
nnoremap <C-B> :CtrlPBuffer<CR>

" Window Navigation Shortcuts
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" NERDTree Shortcuts
nnoremap <C-g> :NERDTreeToggle<CR>
nnoremap <Leader>g :NERDTreeToggle<cr> 
nnoremap <Leader>f :NERDTreeFind<cr>


" UltiSnips
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsEditSplit="vertical"

" JSX
let g:jsx_ext_required = 0

" CtrlP
set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/.idea/*,*/.DS_Store,*/vendor,*/node_modules/*,*/bower_components/*,*/dist/*
